name: Build and publish chart
on:
  workflow_call:
jobs:
  build-publish-chart:
    runs-on: org-${{ github.repository_owner_id }}-amd64-k8s
    container: registry.suse.com/bci/bci-base:latest
    permissions:
      contents: read
      id-token: write
    concurrency:
      group: 'build-chart-tag'
      # instead of cancelling other runs, wait until they are finished
      cancel-in-progress: false
    env:
      ARCH: amd64
      AWS_DEFAULT_REGION: "us-east-1"
    steps:
      - name: install dependencies
        shell: bash
        run: zypper install -y git jq awk aws-cli
      - name: Git safe directory
        run: git config --global --add safe.directory "$PWD"
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Tag Env Variables
        uses: ./.github/actions/setup-tag-env
      - name: install yq
        uses: ./.github/actions/install-yq
        with:
          arch: ${{ env.ARCH }}
      - id: env 
        name: Setup Dependencies Env Variables
        uses: ./.github/actions/setup-build-env
      - name: Install Helm dependencies
        env:
          HELM_URL: https://get.helm.sh/helm-${{ steps.env.outputs.HELM_VERSION }}-linux-amd64.tar.gz
          HELM_UNITTEST_VERSION: ${{ steps.env.outputs.HELM_UNITTEST_VERSION }}
        run: |
          curl ${{ env.HELM_URL }} | tar xvzf - --strip-components=1 -C /tmp/ && \
          mv /tmp/helm /usr/bin/helm_v3 && \
          chmod +x /usr/bin/helm_v3
          helm_v3 plugin install https://github.com/helm-unittest/helm-unittest.git --version ${{ env.HELM_UNITTEST_VERSION }}; \
      - name: Build
        run: ./scripts/chart/build chart
      - name: Validate
        run: ./scripts/chart/validate
      - name: Test
        run: ./scripts/chart/test
      - name: Package
        run: ./scripts/chart/package
      - name: Upload chart
        uses: actions/upload-artifact@v4
        with:
          name: chart
          path: ./bin/chart/*
          if-no-files-found: error
          retention-days: 4
          overwrite: true
      - name: Load Secrets from Vault
        uses: rancher-eio/read-vault-secrets@main
        with:
          secrets: |
            secret/data/github/repo/${{ github.repository }}/optimus-charts-access-key/credentials token | OPTIMUS_CHARTS_ACCESS_KEY ;
            secret/data/github/repo/${{ github.repository }}/optimus-charts-secret-key/credentials token | OPTIMUS_CHARTS_SECRET_KEY ;
            secret/data/github/repo/${{ github.repository }}/chart-dns-invalidator/credentials accessKeyId | AWS_ACCESS_KEY_ID_CACHE_INVALIDATION ;
            secret/data/github/repo/${{ github.repository }}/chart-dns-invalidator/credentials secretAccessKey | AWS_SECRET_ACCESS_KEY_CACHE_INVALIDATION ;
      - name: Upload chart to bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ env.OPTIMUS_CHARTS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ env.OPTIMUS_CHARTS_SECRET_KEY }}
        shell: bash
        run: |
          aws s3 cp --recursive ./bin/chart s3://charts.optimus.rancher.io/server-charts
      - name: Invalidate Cloudfront cache
        env:
          CHARTS_DISTRIBUTION_ID: EKGBR3PUZ9J56
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID_CACHE_INVALIDATION }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY_CACHE_INVALIDATION }}
        shell: bash
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.CHARTS_DISTRIBUTION_ID }} --paths "/*"
